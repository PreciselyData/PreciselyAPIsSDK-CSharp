/*
 * Precisely APIs
 *
 * Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.
 *
 * The version of the OpenAPI document: 18.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.precisely.apis.Client.OpenAPIDateConverter;

namespace com.precisely.apis.Model
{
    /// <summary>
    /// PropertyAttributes
    /// </summary>
    [DataContract]
    public partial class PropertyAttributes :  IEquatable<PropertyAttributes>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PropertyAttributes" /> class.
        /// </summary>
        /// <param name="pbKey">pbKey.</param>
        /// <param name="propApn">propApn.</param>
        /// <param name="propType">propType.</param>
        /// <param name="propSqFt">propSqFt.</param>
        /// <param name="buildgSqFt">buildgSqFt.</param>
        /// <param name="buildgSqFtSource">buildgSqFtSource.</param>
        /// <param name="landUse">landUse.</param>
        /// <param name="construction">construction.</param>
        /// <param name="roofCoverType">roofCoverType.</param>
        /// <param name="subdivision">subdivision.</param>
        /// <param name="geometry">geometry.</param>
        /// <param name="builtYear">builtYear.</param>
        /// <param name="bedrooms">bedrooms.</param>
        /// <param name="baths">baths.</param>
        /// <param name="partialBaths">partialBaths.</param>
        /// <param name="bathFixtures">bathFixtures.</param>
        /// <param name="pool">pool.</param>
        /// <param name="poolType">poolType.</param>
        /// <param name="fireplace">fireplace.</param>
        /// <param name="fireplaceType">fireplaceType.</param>
        /// <param name="mobileHome">mobileHome.</param>
        /// <param name="heatingType">heatingType.</param>
        /// <param name="coolingType">coolingType.</param>
        /// <param name="assessedValue">assessedValue.</param>
        /// <param name="marketValue">marketValue.</param>
        /// <param name="appraisedValue">appraisedValue.</param>
        /// <param name="taxAmount">taxAmount.</param>
        /// <param name="taxExemptions">taxExemptions.</param>
        /// <param name="caExemptions">caExemptions.</param>
        /// <param name="salesDate">salesDate.</param>
        /// <param name="priorSaleDate">priorSaleDate.</param>
        /// <param name="priorSalesPrice">priorSalesPrice.</param>
        /// <param name="priorSaleDocType">priorSaleDocType.</param>
        /// <param name="priorSaleCode">priorSaleCode.</param>
        /// <param name="priorSaleFolioNumber">priorSaleFolioNumber.</param>
        /// <param name="priorSalePageNumber">priorSalePageNumber.</param>
        /// <param name="priorSaleDocNumber">priorSaleDocNumber.</param>
        /// <param name="stories">stories.</param>
        /// <param name="livingSqFt">livingSqFt.</param>
        /// <param name="roofFrameType">roofFrameType.</param>
        /// <param name="foundation">foundation.</param>
        /// <param name="buildgCondition">buildgCondition.</param>
        /// <param name="buildgCount">buildgCount.</param>
        /// <param name="buildgUnitNo">buildgUnitNo.</param>
        /// <param name="buildgFeaturesSqFt">buildgFeaturesSqFt.</param>
        /// <param name="taxAddress">taxAddress.</param>
        /// <param name="formattedTaxAddress">formattedTaxAddress.</param>
        /// <param name="situsAddress">situsAddress.</param>
        /// <param name="vacancy">vacancy.</param>
        /// <param name="owners">owners.</param>
        /// <param name="appraisedValueImp">appraisedValueImp.</param>
        /// <param name="assessedValueImp">assessedValueImp.</param>
        /// <param name="buildgType">buildgType.</param>
        /// <param name="basementType">basementType.</param>
        /// <param name="effectiveBuiltYear">effectiveBuiltYear.</param>
        /// <param name="exteriorWalls">exteriorWalls.</param>
        /// <param name="garageType">garageType.</param>
        /// <param name="lastUpdated">lastUpdated.</param>
        /// <param name="marketValueImp">marketValueImp.</param>
        /// <param name="absenteeOwner">absenteeOwner.</param>
        /// <param name="parkingSqFt">parkingSqFt.</param>
        /// <param name="replacementCost">replacementCost.</param>
        /// <param name="roofShapeType">roofShapeType.</param>
        /// <param name="buildgStyle">buildgStyle.</param>
        /// <param name="basementSqFt">basementSqFt.</param>
        /// <param name="ownerType">ownerType.</param>
        /// <param name="ownerVestType">ownerVestType.</param>
        /// <param name="elevator">elevator.</param>
        /// <param name="propApnSequence">propApnSequence.</param>
        /// <param name="fipsCode">fipsCode.</param>
        /// <param name="propZoning">propZoning.</param>
        /// <param name="locCode">locCode.</param>
        /// <param name="legalMapRef">legalMapRef.</param>
        /// <param name="legalAssessorDesc">legalAssessorDesc.</param>
        /// <param name="legalFullDesc">legalFullDesc.</param>
        /// <param name="legalLotCode">legalLotCode.</param>
        /// <param name="legalLotNumber">legalLotNumber.</param>
        /// <param name="legalLandLot">legalLandLot.</param>
        /// <param name="legalTractNumber">legalTractNumber.</param>
        /// <param name="legalBlock">legalBlock.</param>
        /// <param name="legalSection">legalSection.</param>
        /// <param name="legalDistrict">legalDistrict.</param>
        /// <param name="legalUnitNumber">legalUnitNumber.</param>
        /// <param name="legalPhaseNumber">legalPhaseNumber.</param>
        /// <param name="legalSubName">legalSubName.</param>
        /// <param name="legalTownMuniName">legalTownMuniName.</param>
        /// <param name="legalSectionTownshipRange">legalSectionTownshipRange.</param>
        /// <param name="propAcres">propAcres.</param>
        /// <param name="propFrontFootage">propFrontFootage.</param>
        /// <param name="propDepthFootage">propDepthFootage.</param>
        /// <param name="buildgView">buildgView.</param>
        /// <param name="propSiteInfluene">propSiteInfluene.</param>
        /// <param name="buildgName">buildgName.</param>
        /// <param name="buildgQuality">buildgQuality.</param>
        /// <param name="buildgImproveType">buildgImproveType.</param>
        /// <param name="grossSqft">grossSqft.</param>
        /// <param name="adjGrossSqft">adjGrossSqft.</param>
        /// <param name="buildgClass">buildgClass.</param>
        /// <param name="interiorWall">interiorWall.</param>
        /// <param name="floorType">floorType.</param>
        /// <param name="rooms">rooms.</param>
        /// <param name="otherRooms">otherRooms.</param>
        /// <param name="plumbingFixtures">plumbingFixtures.</param>
        /// <param name="parkingCapacity">parkingCapacity.</param>
        /// <param name="energyType">energyType.</param>
        /// <param name="fuelType">fuelType.</param>
        /// <param name="sewerType">sewerType.</param>
        /// <param name="waterType">waterType.</param>
        /// <param name="amenities">amenities.</param>
        /// <param name="extraFeatureSqft">extraFeatureSqft.</param>
        /// <param name="buildgImproveArea">buildgImproveArea.</param>
        /// <param name="taxAccountNumber">taxAccountNumber.</param>
        /// <param name="taxTapeCutDate">taxTapeCutDate.</param>
        /// <param name="taxDocType">taxDocType.</param>
        /// <param name="taxSalesPrice">taxSalesPrice.</param>
        /// <param name="taxSalesPriceCode">taxSalesPriceCode.</param>
        /// <param name="recBookNumber">recBookNumber.</param>
        /// <param name="recPageNumber">recPageNumber.</param>
        /// <param name="recDocNumber">recDocNumber.</param>
        /// <param name="taxYear">taxYear.</param>
        /// <param name="taxDelYear">taxDelYear.</param>
        /// <param name="assessedYear">assessedYear.</param>
        /// <param name="assessedLandValue">assessedLandValue.</param>
        /// <param name="marketValueYear">marketValueYear.</param>
        /// <param name="marketValueLand">marketValueLand.</param>
        /// <param name="appraisedValueLand">appraisedValueLand.</param>
        /// <param name="taxRateCode">taxRateCode.</param>
        /// <param name="propLinkId">propLinkId.</param>
        /// <param name="geoId">geoId.</param>
        public PropertyAttributes(string pbKey = default(string), string propApn = default(string), string propType = default(string), string propSqFt = default(string), string buildgSqFt = default(string), BuildingSqftSource buildgSqFtSource = default(BuildingSqftSource), LandUse landUse = default(LandUse), Construction construction = default(Construction), RoofCoverType roofCoverType = default(RoofCoverType), string subdivision = default(string), PropertyGeometry geometry = default(PropertyGeometry), string builtYear = default(string), string bedrooms = default(string), string baths = default(string), string partialBaths = default(string), string bathFixtures = default(string), string pool = default(string), PoolType poolType = default(PoolType), string fireplace = default(string), FireplaceType fireplaceType = default(FireplaceType), string mobileHome = default(string), HeatingType heatingType = default(HeatingType), CoolingType coolingType = default(CoolingType), string assessedValue = default(string), string marketValue = default(string), string appraisedValue = default(string), string taxAmount = default(string), List<TaxExemption> taxExemptions = default(List<TaxExemption>), CaExemptions caExemptions = default(CaExemptions), string salesDate = default(string), string priorSaleDate = default(string), string priorSalesPrice = default(string), string priorSaleDocType = default(string), PriorSaleCode priorSaleCode = default(PriorSaleCode), string priorSaleFolioNumber = default(string), string priorSalePageNumber = default(string), string priorSaleDocNumber = default(string), Stories stories = default(Stories), string livingSqFt = default(string), RoofFrameType roofFrameType = default(RoofFrameType), Foundation foundation = default(Foundation), BuildgCondition buildgCondition = default(BuildgCondition), string buildgCount = default(string), string buildgUnitNo = default(string), List<BuildgFeaturesSqft> buildgFeaturesSqFt = default(List<BuildgFeaturesSqft>), string taxAddress = default(string), FormattedTaxAddress formattedTaxAddress = default(FormattedTaxAddress), SitusAddress situsAddress = default(SitusAddress), Vacancy vacancy = default(Vacancy), List<Owners> owners = default(List<Owners>), string appraisedValueImp = default(string), string assessedValueImp = default(string), BuildgType buildgType = default(BuildgType), BasementType basementType = default(BasementType), string effectiveBuiltYear = default(string), ExteriorWalls exteriorWalls = default(ExteriorWalls), GarageType garageType = default(GarageType), string lastUpdated = default(string), string marketValueImp = default(string), AbsenteeOwner absenteeOwner = default(AbsenteeOwner), string parkingSqFt = default(string), string replacementCost = default(string), RoofShapeType roofShapeType = default(RoofShapeType), BuildgStyle buildgStyle = default(BuildgStyle), string basementSqFt = default(string), string ownerType = default(string), OwnerVestType ownerVestType = default(OwnerVestType), string elevator = default(string), string propApnSequence = default(string), string fipsCode = default(string), string propZoning = default(string), LocCode locCode = default(LocCode), string legalMapRef = default(string), string legalAssessorDesc = default(string), string legalFullDesc = default(string), string legalLotCode = default(string), string legalLotNumber = default(string), string legalLandLot = default(string), string legalTractNumber = default(string), string legalBlock = default(string), string legalSection = default(string), string legalDistrict = default(string), string legalUnitNumber = default(string), string legalPhaseNumber = default(string), string legalSubName = default(string), string legalTownMuniName = default(string), string legalSectionTownshipRange = default(string), string propAcres = default(string), string propFrontFootage = default(string), string propDepthFootage = default(string), BuildgView buildgView = default(BuildgView), PropSiteInfluene propSiteInfluene = default(PropSiteInfluene), string buildgName = default(string), BuildgQuality buildgQuality = default(BuildgQuality), BuildgImproveType buildgImproveType = default(BuildgImproveType), string grossSqft = default(string), string adjGrossSqft = default(string), BuildgClass buildgClass = default(BuildgClass), InteriorWall interiorWall = default(InteriorWall), FloorType floorType = default(FloorType), string rooms = default(string), OtherRooms otherRooms = default(OtherRooms), string plumbingFixtures = default(string), string parkingCapacity = default(string), EnergyType energyType = default(EnergyType), FuelType fuelType = default(FuelType), string sewerType = default(string), string waterType = default(string), Amenities amenities = default(Amenities), List<ExtraFeatureSqft> extraFeatureSqft = default(List<ExtraFeatureSqft>), List<BuildgImproveArea> buildgImproveArea = default(List<BuildgImproveArea>), string taxAccountNumber = default(string), string taxTapeCutDate = default(string), TaxDocType taxDocType = default(TaxDocType), string taxSalesPrice = default(string), TaxSalesPriceCode taxSalesPriceCode = default(TaxSalesPriceCode), string recBookNumber = default(string), string recPageNumber = default(string), string recDocNumber = default(string), string taxYear = default(string), string taxDelYear = default(string), string assessedYear = default(string), string assessedLandValue = default(string), string marketValueYear = default(string), string marketValueLand = default(string), string appraisedValueLand = default(string), string taxRateCode = default(string), string propLinkId = default(string), string geoId = default(string))
        {
            this.PbKey = pbKey;
            this.PropApn = propApn;
            this.PropType = propType;
            this.PropSqFt = propSqFt;
            this.BuildgSqFt = buildgSqFt;
            this.BuildgSqFtSource = buildgSqFtSource;
            this.LandUse = landUse;
            this.Construction = construction;
            this.RoofCoverType = roofCoverType;
            this.Subdivision = subdivision;
            this.Geometry = geometry;
            this.BuiltYear = builtYear;
            this.Bedrooms = bedrooms;
            this.Baths = baths;
            this.PartialBaths = partialBaths;
            this.BathFixtures = bathFixtures;
            this.Pool = pool;
            this.PoolType = poolType;
            this.Fireplace = fireplace;
            this.FireplaceType = fireplaceType;
            this.MobileHome = mobileHome;
            this.HeatingType = heatingType;
            this.CoolingType = coolingType;
            this.AssessedValue = assessedValue;
            this.MarketValue = marketValue;
            this.AppraisedValue = appraisedValue;
            this.TaxAmount = taxAmount;
            this.TaxExemptions = taxExemptions;
            this.CaExemptions = caExemptions;
            this.SalesDate = salesDate;
            this.PriorSaleDate = priorSaleDate;
            this.PriorSalesPrice = priorSalesPrice;
            this.PriorSaleDocType = priorSaleDocType;
            this.PriorSaleCode = priorSaleCode;
            this.PriorSaleFolioNumber = priorSaleFolioNumber;
            this.PriorSalePageNumber = priorSalePageNumber;
            this.PriorSaleDocNumber = priorSaleDocNumber;
            this.Stories = stories;
            this.LivingSqFt = livingSqFt;
            this.RoofFrameType = roofFrameType;
            this.Foundation = foundation;
            this.BuildgCondition = buildgCondition;
            this.BuildgCount = buildgCount;
            this.BuildgUnitNo = buildgUnitNo;
            this.BuildgFeaturesSqFt = buildgFeaturesSqFt;
            this.TaxAddress = taxAddress;
            this.FormattedTaxAddress = formattedTaxAddress;
            this.SitusAddress = situsAddress;
            this.Vacancy = vacancy;
            this.Owners = owners;
            this.AppraisedValueImp = appraisedValueImp;
            this.AssessedValueImp = assessedValueImp;
            this.BuildgType = buildgType;
            this.BasementType = basementType;
            this.EffectiveBuiltYear = effectiveBuiltYear;
            this.ExteriorWalls = exteriorWalls;
            this.GarageType = garageType;
            this.LastUpdated = lastUpdated;
            this.MarketValueImp = marketValueImp;
            this.AbsenteeOwner = absenteeOwner;
            this.ParkingSqFt = parkingSqFt;
            this.ReplacementCost = replacementCost;
            this.RoofShapeType = roofShapeType;
            this.BuildgStyle = buildgStyle;
            this.BasementSqFt = basementSqFt;
            this.OwnerType = ownerType;
            this.OwnerVestType = ownerVestType;
            this.Elevator = elevator;
            this.PropApnSequence = propApnSequence;
            this.FipsCode = fipsCode;
            this.PropZoning = propZoning;
            this.LocCode = locCode;
            this.LegalMapRef = legalMapRef;
            this.LegalAssessorDesc = legalAssessorDesc;
            this.LegalFullDesc = legalFullDesc;
            this.LegalLotCode = legalLotCode;
            this.LegalLotNumber = legalLotNumber;
            this.LegalLandLot = legalLandLot;
            this.LegalTractNumber = legalTractNumber;
            this.LegalBlock = legalBlock;
            this.LegalSection = legalSection;
            this.LegalDistrict = legalDistrict;
            this.LegalUnitNumber = legalUnitNumber;
            this.LegalPhaseNumber = legalPhaseNumber;
            this.LegalSubName = legalSubName;
            this.LegalTownMuniName = legalTownMuniName;
            this.LegalSectionTownshipRange = legalSectionTownshipRange;
            this.PropAcres = propAcres;
            this.PropFrontFootage = propFrontFootage;
            this.PropDepthFootage = propDepthFootage;
            this.BuildgView = buildgView;
            this.PropSiteInfluene = propSiteInfluene;
            this.BuildgName = buildgName;
            this.BuildgQuality = buildgQuality;
            this.BuildgImproveType = buildgImproveType;
            this.GrossSqft = grossSqft;
            this.AdjGrossSqft = adjGrossSqft;
            this.BuildgClass = buildgClass;
            this.InteriorWall = interiorWall;
            this.FloorType = floorType;
            this.Rooms = rooms;
            this.OtherRooms = otherRooms;
            this.PlumbingFixtures = plumbingFixtures;
            this.ParkingCapacity = parkingCapacity;
            this.EnergyType = energyType;
            this.FuelType = fuelType;
            this.SewerType = sewerType;
            this.WaterType = waterType;
            this.Amenities = amenities;
            this.ExtraFeatureSqft = extraFeatureSqft;
            this.BuildgImproveArea = buildgImproveArea;
            this.TaxAccountNumber = taxAccountNumber;
            this.TaxTapeCutDate = taxTapeCutDate;
            this.TaxDocType = taxDocType;
            this.TaxSalesPrice = taxSalesPrice;
            this.TaxSalesPriceCode = taxSalesPriceCode;
            this.RecBookNumber = recBookNumber;
            this.RecPageNumber = recPageNumber;
            this.RecDocNumber = recDocNumber;
            this.TaxYear = taxYear;
            this.TaxDelYear = taxDelYear;
            this.AssessedYear = assessedYear;
            this.AssessedLandValue = assessedLandValue;
            this.MarketValueYear = marketValueYear;
            this.MarketValueLand = marketValueLand;
            this.AppraisedValueLand = appraisedValueLand;
            this.TaxRateCode = taxRateCode;
            this.PropLinkId = propLinkId;
            this.GeoId = geoId;
        }

        /// <summary>
        /// Gets or Sets PbKey
        /// </summary>
        [DataMember(Name="pbKey", EmitDefaultValue=false)]
        public string PbKey { get; set; }

        /// <summary>
        /// Gets or Sets PropApn
        /// </summary>
        [DataMember(Name="propApn", EmitDefaultValue=false)]
        public string PropApn { get; set; }

        /// <summary>
        /// Gets or Sets PropType
        /// </summary>
        [DataMember(Name="propType", EmitDefaultValue=false)]
        public string PropType { get; set; }

        /// <summary>
        /// Gets or Sets PropSqFt
        /// </summary>
        [DataMember(Name="propSqFt", EmitDefaultValue=false)]
        public string PropSqFt { get; set; }

        /// <summary>
        /// Gets or Sets BuildgSqFt
        /// </summary>
        [DataMember(Name="buildgSqFt", EmitDefaultValue=false)]
        public string BuildgSqFt { get; set; }

        /// <summary>
        /// Gets or Sets BuildgSqFtSource
        /// </summary>
        [DataMember(Name="buildgSqFtSource", EmitDefaultValue=false)]
        public BuildingSqftSource BuildgSqFtSource { get; set; }

        /// <summary>
        /// Gets or Sets LandUse
        /// </summary>
        [DataMember(Name="landUse", EmitDefaultValue=false)]
        public LandUse LandUse { get; set; }

        /// <summary>
        /// Gets or Sets Construction
        /// </summary>
        [DataMember(Name="construction", EmitDefaultValue=false)]
        public Construction Construction { get; set; }

        /// <summary>
        /// Gets or Sets RoofCoverType
        /// </summary>
        [DataMember(Name="roofCoverType", EmitDefaultValue=false)]
        public RoofCoverType RoofCoverType { get; set; }

        /// <summary>
        /// Gets or Sets Subdivision
        /// </summary>
        [DataMember(Name="subdivision", EmitDefaultValue=false)]
        public string Subdivision { get; set; }

        /// <summary>
        /// Gets or Sets Geometry
        /// </summary>
        [DataMember(Name="geometry", EmitDefaultValue=false)]
        public PropertyGeometry Geometry { get; set; }

        /// <summary>
        /// Gets or Sets BuiltYear
        /// </summary>
        [DataMember(Name="builtYear", EmitDefaultValue=false)]
        public string BuiltYear { get; set; }

        /// <summary>
        /// Gets or Sets Bedrooms
        /// </summary>
        [DataMember(Name="bedrooms", EmitDefaultValue=false)]
        public string Bedrooms { get; set; }

        /// <summary>
        /// Gets or Sets Baths
        /// </summary>
        [DataMember(Name="baths", EmitDefaultValue=false)]
        public string Baths { get; set; }

        /// <summary>
        /// Gets or Sets PartialBaths
        /// </summary>
        [DataMember(Name="partialBaths", EmitDefaultValue=false)]
        public string PartialBaths { get; set; }

        /// <summary>
        /// Gets or Sets BathFixtures
        /// </summary>
        [DataMember(Name="bathFixtures", EmitDefaultValue=false)]
        public string BathFixtures { get; set; }

        /// <summary>
        /// Gets or Sets Pool
        /// </summary>
        [DataMember(Name="pool", EmitDefaultValue=false)]
        public string Pool { get; set; }

        /// <summary>
        /// Gets or Sets PoolType
        /// </summary>
        [DataMember(Name="poolType", EmitDefaultValue=false)]
        public PoolType PoolType { get; set; }

        /// <summary>
        /// Gets or Sets Fireplace
        /// </summary>
        [DataMember(Name="fireplace", EmitDefaultValue=false)]
        public string Fireplace { get; set; }

        /// <summary>
        /// Gets or Sets FireplaceType
        /// </summary>
        [DataMember(Name="fireplaceType", EmitDefaultValue=false)]
        public FireplaceType FireplaceType { get; set; }

        /// <summary>
        /// Gets or Sets MobileHome
        /// </summary>
        [DataMember(Name="mobileHome", EmitDefaultValue=false)]
        public string MobileHome { get; set; }

        /// <summary>
        /// Gets or Sets HeatingType
        /// </summary>
        [DataMember(Name="heatingType", EmitDefaultValue=false)]
        public HeatingType HeatingType { get; set; }

        /// <summary>
        /// Gets or Sets CoolingType
        /// </summary>
        [DataMember(Name="coolingType", EmitDefaultValue=false)]
        public CoolingType CoolingType { get; set; }

        /// <summary>
        /// Gets or Sets AssessedValue
        /// </summary>
        [DataMember(Name="assessedValue", EmitDefaultValue=false)]
        public string AssessedValue { get; set; }

        /// <summary>
        /// Gets or Sets MarketValue
        /// </summary>
        [DataMember(Name="marketValue", EmitDefaultValue=false)]
        public string MarketValue { get; set; }

        /// <summary>
        /// Gets or Sets AppraisedValue
        /// </summary>
        [DataMember(Name="appraisedValue", EmitDefaultValue=false)]
        public string AppraisedValue { get; set; }

        /// <summary>
        /// Gets or Sets TaxAmount
        /// </summary>
        [DataMember(Name="taxAmount", EmitDefaultValue=false)]
        public string TaxAmount { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptions
        /// </summary>
        [DataMember(Name="taxExemptions", EmitDefaultValue=false)]
        public List<TaxExemption> TaxExemptions { get; set; }

        /// <summary>
        /// Gets or Sets CaExemptions
        /// </summary>
        [DataMember(Name="caExemptions", EmitDefaultValue=false)]
        public CaExemptions CaExemptions { get; set; }

        /// <summary>
        /// Gets or Sets SalesDate
        /// </summary>
        [DataMember(Name="salesDate", EmitDefaultValue=false)]
        public string SalesDate { get; set; }

        /// <summary>
        /// Gets or Sets PriorSaleDate
        /// </summary>
        [DataMember(Name="priorSaleDate", EmitDefaultValue=false)]
        public string PriorSaleDate { get; set; }

        /// <summary>
        /// Gets or Sets PriorSalesPrice
        /// </summary>
        [DataMember(Name="priorSalesPrice", EmitDefaultValue=false)]
        public string PriorSalesPrice { get; set; }

        /// <summary>
        /// Gets or Sets PriorSaleDocType
        /// </summary>
        [DataMember(Name="priorSaleDocType", EmitDefaultValue=false)]
        public string PriorSaleDocType { get; set; }

        /// <summary>
        /// Gets or Sets PriorSaleCode
        /// </summary>
        [DataMember(Name="priorSaleCode", EmitDefaultValue=false)]
        public PriorSaleCode PriorSaleCode { get; set; }

        /// <summary>
        /// Gets or Sets PriorSaleFolioNumber
        /// </summary>
        [DataMember(Name="priorSaleFolioNumber", EmitDefaultValue=false)]
        public string PriorSaleFolioNumber { get; set; }

        /// <summary>
        /// Gets or Sets PriorSalePageNumber
        /// </summary>
        [DataMember(Name="priorSalePageNumber", EmitDefaultValue=false)]
        public string PriorSalePageNumber { get; set; }

        /// <summary>
        /// Gets or Sets PriorSaleDocNumber
        /// </summary>
        [DataMember(Name="priorSaleDocNumber", EmitDefaultValue=false)]
        public string PriorSaleDocNumber { get; set; }

        /// <summary>
        /// Gets or Sets Stories
        /// </summary>
        [DataMember(Name="stories", EmitDefaultValue=false)]
        public Stories Stories { get; set; }

        /// <summary>
        /// Gets or Sets LivingSqFt
        /// </summary>
        [DataMember(Name="livingSqFt", EmitDefaultValue=false)]
        public string LivingSqFt { get; set; }

        /// <summary>
        /// Gets or Sets RoofFrameType
        /// </summary>
        [DataMember(Name="roofFrameType", EmitDefaultValue=false)]
        public RoofFrameType RoofFrameType { get; set; }

        /// <summary>
        /// Gets or Sets Foundation
        /// </summary>
        [DataMember(Name="foundation", EmitDefaultValue=false)]
        public Foundation Foundation { get; set; }

        /// <summary>
        /// Gets or Sets BuildgCondition
        /// </summary>
        [DataMember(Name="buildgCondition", EmitDefaultValue=false)]
        public BuildgCondition BuildgCondition { get; set; }

        /// <summary>
        /// Gets or Sets BuildgCount
        /// </summary>
        [DataMember(Name="buildgCount", EmitDefaultValue=false)]
        public string BuildgCount { get; set; }

        /// <summary>
        /// Gets or Sets BuildgUnitNo
        /// </summary>
        [DataMember(Name="buildgUnitNo", EmitDefaultValue=false)]
        public string BuildgUnitNo { get; set; }

        /// <summary>
        /// Gets or Sets BuildgFeaturesSqFt
        /// </summary>
        [DataMember(Name="buildgFeaturesSqFt", EmitDefaultValue=false)]
        public List<BuildgFeaturesSqft> BuildgFeaturesSqFt { get; set; }

        /// <summary>
        /// Gets or Sets TaxAddress
        /// </summary>
        [DataMember(Name="taxAddress", EmitDefaultValue=false)]
        public string TaxAddress { get; set; }

        /// <summary>
        /// Gets or Sets FormattedTaxAddress
        /// </summary>
        [DataMember(Name="formattedTaxAddress", EmitDefaultValue=false)]
        public FormattedTaxAddress FormattedTaxAddress { get; set; }

        /// <summary>
        /// Gets or Sets SitusAddress
        /// </summary>
        [DataMember(Name="situsAddress", EmitDefaultValue=false)]
        public SitusAddress SitusAddress { get; set; }

        /// <summary>
        /// Gets or Sets Vacancy
        /// </summary>
        [DataMember(Name="vacancy", EmitDefaultValue=false)]
        public Vacancy Vacancy { get; set; }

        /// <summary>
        /// Gets or Sets Owners
        /// </summary>
        [DataMember(Name="owners", EmitDefaultValue=false)]
        public List<Owners> Owners { get; set; }

        /// <summary>
        /// Gets or Sets AppraisedValueImp
        /// </summary>
        [DataMember(Name="appraisedValueImp", EmitDefaultValue=false)]
        public string AppraisedValueImp { get; set; }

        /// <summary>
        /// Gets or Sets AssessedValueImp
        /// </summary>
        [DataMember(Name="assessedValueImp", EmitDefaultValue=false)]
        public string AssessedValueImp { get; set; }

        /// <summary>
        /// Gets or Sets BuildgType
        /// </summary>
        [DataMember(Name="buildgType", EmitDefaultValue=false)]
        public BuildgType BuildgType { get; set; }

        /// <summary>
        /// Gets or Sets BasementType
        /// </summary>
        [DataMember(Name="basementType", EmitDefaultValue=false)]
        public BasementType BasementType { get; set; }

        /// <summary>
        /// Gets or Sets EffectiveBuiltYear
        /// </summary>
        [DataMember(Name="effectiveBuiltYear", EmitDefaultValue=false)]
        public string EffectiveBuiltYear { get; set; }

        /// <summary>
        /// Gets or Sets ExteriorWalls
        /// </summary>
        [DataMember(Name="exteriorWalls", EmitDefaultValue=false)]
        public ExteriorWalls ExteriorWalls { get; set; }

        /// <summary>
        /// Gets or Sets GarageType
        /// </summary>
        [DataMember(Name="garageType", EmitDefaultValue=false)]
        public GarageType GarageType { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdated
        /// </summary>
        [DataMember(Name="lastUpdated", EmitDefaultValue=false)]
        public string LastUpdated { get; set; }

        /// <summary>
        /// Gets or Sets MarketValueImp
        /// </summary>
        [DataMember(Name="marketValueImp", EmitDefaultValue=false)]
        public string MarketValueImp { get; set; }

        /// <summary>
        /// Gets or Sets AbsenteeOwner
        /// </summary>
        [DataMember(Name="absenteeOwner", EmitDefaultValue=false)]
        public AbsenteeOwner AbsenteeOwner { get; set; }

        /// <summary>
        /// Gets or Sets ParkingSqFt
        /// </summary>
        [DataMember(Name="parkingSqFt", EmitDefaultValue=false)]
        public string ParkingSqFt { get; set; }

        /// <summary>
        /// Gets or Sets ReplacementCost
        /// </summary>
        [DataMember(Name="replacementCost", EmitDefaultValue=false)]
        public string ReplacementCost { get; set; }

        /// <summary>
        /// Gets or Sets RoofShapeType
        /// </summary>
        [DataMember(Name="roofShapeType", EmitDefaultValue=false)]
        public RoofShapeType RoofShapeType { get; set; }

        /// <summary>
        /// Gets or Sets BuildgStyle
        /// </summary>
        [DataMember(Name="buildgStyle", EmitDefaultValue=false)]
        public BuildgStyle BuildgStyle { get; set; }

        /// <summary>
        /// Gets or Sets BasementSqFt
        /// </summary>
        [DataMember(Name="basementSqFt", EmitDefaultValue=false)]
        public string BasementSqFt { get; set; }

        /// <summary>
        /// Gets or Sets OwnerType
        /// </summary>
        [DataMember(Name="ownerType", EmitDefaultValue=false)]
        public string OwnerType { get; set; }

        /// <summary>
        /// Gets or Sets OwnerVestType
        /// </summary>
        [DataMember(Name="ownerVestType", EmitDefaultValue=false)]
        public OwnerVestType OwnerVestType { get; set; }

        /// <summary>
        /// Gets or Sets Elevator
        /// </summary>
        [DataMember(Name="elevator", EmitDefaultValue=false)]
        public string Elevator { get; set; }

        /// <summary>
        /// Gets or Sets PropApnSequence
        /// </summary>
        [DataMember(Name="propApnSequence", EmitDefaultValue=false)]
        public string PropApnSequence { get; set; }

        /// <summary>
        /// Gets or Sets FipsCode
        /// </summary>
        [DataMember(Name="fipsCode", EmitDefaultValue=false)]
        public string FipsCode { get; set; }

        /// <summary>
        /// Gets or Sets PropZoning
        /// </summary>
        [DataMember(Name="propZoning", EmitDefaultValue=false)]
        public string PropZoning { get; set; }

        /// <summary>
        /// Gets or Sets LocCode
        /// </summary>
        [DataMember(Name="locCode", EmitDefaultValue=false)]
        public LocCode LocCode { get; set; }

        /// <summary>
        /// Gets or Sets LegalMapRef
        /// </summary>
        [DataMember(Name="legalMapRef", EmitDefaultValue=false)]
        public string LegalMapRef { get; set; }

        /// <summary>
        /// Gets or Sets LegalAssessorDesc
        /// </summary>
        [DataMember(Name="legalAssessorDesc", EmitDefaultValue=false)]
        public string LegalAssessorDesc { get; set; }

        /// <summary>
        /// Gets or Sets LegalFullDesc
        /// </summary>
        [DataMember(Name="legalFullDesc", EmitDefaultValue=false)]
        public string LegalFullDesc { get; set; }

        /// <summary>
        /// Gets or Sets LegalLotCode
        /// </summary>
        [DataMember(Name="legalLotCode", EmitDefaultValue=false)]
        public string LegalLotCode { get; set; }

        /// <summary>
        /// Gets or Sets LegalLotNumber
        /// </summary>
        [DataMember(Name="legalLotNumber", EmitDefaultValue=false)]
        public string LegalLotNumber { get; set; }

        /// <summary>
        /// Gets or Sets LegalLandLot
        /// </summary>
        [DataMember(Name="legalLandLot", EmitDefaultValue=false)]
        public string LegalLandLot { get; set; }

        /// <summary>
        /// Gets or Sets LegalTractNumber
        /// </summary>
        [DataMember(Name="legalTractNumber", EmitDefaultValue=false)]
        public string LegalTractNumber { get; set; }

        /// <summary>
        /// Gets or Sets LegalBlock
        /// </summary>
        [DataMember(Name="legalBlock", EmitDefaultValue=false)]
        public string LegalBlock { get; set; }

        /// <summary>
        /// Gets or Sets LegalSection
        /// </summary>
        [DataMember(Name="legalSection", EmitDefaultValue=false)]
        public string LegalSection { get; set; }

        /// <summary>
        /// Gets or Sets LegalDistrict
        /// </summary>
        [DataMember(Name="legalDistrict", EmitDefaultValue=false)]
        public string LegalDistrict { get; set; }

        /// <summary>
        /// Gets or Sets LegalUnitNumber
        /// </summary>
        [DataMember(Name="legalUnitNumber", EmitDefaultValue=false)]
        public string LegalUnitNumber { get; set; }

        /// <summary>
        /// Gets or Sets LegalPhaseNumber
        /// </summary>
        [DataMember(Name="legalPhaseNumber", EmitDefaultValue=false)]
        public string LegalPhaseNumber { get; set; }

        /// <summary>
        /// Gets or Sets LegalSubName
        /// </summary>
        [DataMember(Name="legalSubName", EmitDefaultValue=false)]
        public string LegalSubName { get; set; }

        /// <summary>
        /// Gets or Sets LegalTownMuniName
        /// </summary>
        [DataMember(Name="legalTownMuniName", EmitDefaultValue=false)]
        public string LegalTownMuniName { get; set; }

        /// <summary>
        /// Gets or Sets LegalSectionTownshipRange
        /// </summary>
        [DataMember(Name="legalSectionTownshipRange", EmitDefaultValue=false)]
        public string LegalSectionTownshipRange { get; set; }

        /// <summary>
        /// Gets or Sets PropAcres
        /// </summary>
        [DataMember(Name="propAcres", EmitDefaultValue=false)]
        public string PropAcres { get; set; }

        /// <summary>
        /// Gets or Sets PropFrontFootage
        /// </summary>
        [DataMember(Name="propFrontFootage", EmitDefaultValue=false)]
        public string PropFrontFootage { get; set; }

        /// <summary>
        /// Gets or Sets PropDepthFootage
        /// </summary>
        [DataMember(Name="propDepthFootage", EmitDefaultValue=false)]
        public string PropDepthFootage { get; set; }

        /// <summary>
        /// Gets or Sets BuildgView
        /// </summary>
        [DataMember(Name="buildgView", EmitDefaultValue=false)]
        public BuildgView BuildgView { get; set; }

        /// <summary>
        /// Gets or Sets PropSiteInfluene
        /// </summary>
        [DataMember(Name="propSiteInfluene", EmitDefaultValue=false)]
        public PropSiteInfluene PropSiteInfluene { get; set; }

        /// <summary>
        /// Gets or Sets BuildgName
        /// </summary>
        [DataMember(Name="buildgName", EmitDefaultValue=false)]
        public string BuildgName { get; set; }

        /// <summary>
        /// Gets or Sets BuildgQuality
        /// </summary>
        [DataMember(Name="buildgQuality", EmitDefaultValue=false)]
        public BuildgQuality BuildgQuality { get; set; }

        /// <summary>
        /// Gets or Sets BuildgImproveType
        /// </summary>
        [DataMember(Name="buildgImproveType", EmitDefaultValue=false)]
        public BuildgImproveType BuildgImproveType { get; set; }

        /// <summary>
        /// Gets or Sets GrossSqft
        /// </summary>
        [DataMember(Name="grossSqft", EmitDefaultValue=false)]
        public string GrossSqft { get; set; }

        /// <summary>
        /// Gets or Sets AdjGrossSqft
        /// </summary>
        [DataMember(Name="adjGrossSqft", EmitDefaultValue=false)]
        public string AdjGrossSqft { get; set; }

        /// <summary>
        /// Gets or Sets BuildgClass
        /// </summary>
        [DataMember(Name="buildgClass", EmitDefaultValue=false)]
        public BuildgClass BuildgClass { get; set; }

        /// <summary>
        /// Gets or Sets InteriorWall
        /// </summary>
        [DataMember(Name="interiorWall", EmitDefaultValue=false)]
        public InteriorWall InteriorWall { get; set; }

        /// <summary>
        /// Gets or Sets FloorType
        /// </summary>
        [DataMember(Name="floorType", EmitDefaultValue=false)]
        public FloorType FloorType { get; set; }

        /// <summary>
        /// Gets or Sets Rooms
        /// </summary>
        [DataMember(Name="rooms", EmitDefaultValue=false)]
        public string Rooms { get; set; }

        /// <summary>
        /// Gets or Sets OtherRooms
        /// </summary>
        [DataMember(Name="otherRooms", EmitDefaultValue=false)]
        public OtherRooms OtherRooms { get; set; }

        /// <summary>
        /// Gets or Sets PlumbingFixtures
        /// </summary>
        [DataMember(Name="plumbingFixtures", EmitDefaultValue=false)]
        public string PlumbingFixtures { get; set; }

        /// <summary>
        /// Gets or Sets ParkingCapacity
        /// </summary>
        [DataMember(Name="parkingCapacity", EmitDefaultValue=false)]
        public string ParkingCapacity { get; set; }

        /// <summary>
        /// Gets or Sets EnergyType
        /// </summary>
        [DataMember(Name="energyType", EmitDefaultValue=false)]
        public EnergyType EnergyType { get; set; }

        /// <summary>
        /// Gets or Sets FuelType
        /// </summary>
        [DataMember(Name="fuelType", EmitDefaultValue=false)]
        public FuelType FuelType { get; set; }

        /// <summary>
        /// Gets or Sets SewerType
        /// </summary>
        [DataMember(Name="sewerType", EmitDefaultValue=false)]
        public string SewerType { get; set; }

        /// <summary>
        /// Gets or Sets WaterType
        /// </summary>
        [DataMember(Name="waterType", EmitDefaultValue=false)]
        public string WaterType { get; set; }

        /// <summary>
        /// Gets or Sets Amenities
        /// </summary>
        [DataMember(Name="amenities", EmitDefaultValue=false)]
        public Amenities Amenities { get; set; }

        /// <summary>
        /// Gets or Sets ExtraFeatureSqft
        /// </summary>
        [DataMember(Name="extraFeatureSqft", EmitDefaultValue=false)]
        public List<ExtraFeatureSqft> ExtraFeatureSqft { get; set; }

        /// <summary>
        /// Gets or Sets BuildgImproveArea
        /// </summary>
        [DataMember(Name="buildgImproveArea", EmitDefaultValue=false)]
        public List<BuildgImproveArea> BuildgImproveArea { get; set; }

        /// <summary>
        /// Gets or Sets TaxAccountNumber
        /// </summary>
        [DataMember(Name="taxAccountNumber", EmitDefaultValue=false)]
        public string TaxAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets TaxTapeCutDate
        /// </summary>
        [DataMember(Name="taxTapeCutDate", EmitDefaultValue=false)]
        public string TaxTapeCutDate { get; set; }

        /// <summary>
        /// Gets or Sets TaxDocType
        /// </summary>
        [DataMember(Name="taxDocType", EmitDefaultValue=false)]
        public TaxDocType TaxDocType { get; set; }

        /// <summary>
        /// Gets or Sets TaxSalesPrice
        /// </summary>
        [DataMember(Name="taxSalesPrice", EmitDefaultValue=false)]
        public string TaxSalesPrice { get; set; }

        /// <summary>
        /// Gets or Sets TaxSalesPriceCode
        /// </summary>
        [DataMember(Name="taxSalesPriceCode", EmitDefaultValue=false)]
        public TaxSalesPriceCode TaxSalesPriceCode { get; set; }

        /// <summary>
        /// Gets or Sets RecBookNumber
        /// </summary>
        [DataMember(Name="recBookNumber", EmitDefaultValue=false)]
        public string RecBookNumber { get; set; }

        /// <summary>
        /// Gets or Sets RecPageNumber
        /// </summary>
        [DataMember(Name="recPageNumber", EmitDefaultValue=false)]
        public string RecPageNumber { get; set; }

        /// <summary>
        /// Gets or Sets RecDocNumber
        /// </summary>
        [DataMember(Name="recDocNumber", EmitDefaultValue=false)]
        public string RecDocNumber { get; set; }

        /// <summary>
        /// Gets or Sets TaxYear
        /// </summary>
        [DataMember(Name="taxYear", EmitDefaultValue=false)]
        public string TaxYear { get; set; }

        /// <summary>
        /// Gets or Sets TaxDelYear
        /// </summary>
        [DataMember(Name="taxDelYear", EmitDefaultValue=false)]
        public string TaxDelYear { get; set; }

        /// <summary>
        /// Gets or Sets AssessedYear
        /// </summary>
        [DataMember(Name="assessedYear", EmitDefaultValue=false)]
        public string AssessedYear { get; set; }

        /// <summary>
        /// Gets or Sets AssessedLandValue
        /// </summary>
        [DataMember(Name="assessedLandValue", EmitDefaultValue=false)]
        public string AssessedLandValue { get; set; }

        /// <summary>
        /// Gets or Sets MarketValueYear
        /// </summary>
        [DataMember(Name="marketValueYear", EmitDefaultValue=false)]
        public string MarketValueYear { get; set; }

        /// <summary>
        /// Gets or Sets MarketValueLand
        /// </summary>
        [DataMember(Name="marketValueLand", EmitDefaultValue=false)]
        public string MarketValueLand { get; set; }

        /// <summary>
        /// Gets or Sets AppraisedValueLand
        /// </summary>
        [DataMember(Name="appraisedValueLand", EmitDefaultValue=false)]
        public string AppraisedValueLand { get; set; }

        /// <summary>
        /// Gets or Sets TaxRateCode
        /// </summary>
        [DataMember(Name="taxRateCode", EmitDefaultValue=false)]
        public string TaxRateCode { get; set; }

        /// <summary>
        /// Gets or Sets PropLinkId
        /// </summary>
        [DataMember(Name="propLinkId", EmitDefaultValue=false)]
        public string PropLinkId { get; set; }

        /// <summary>
        /// Gets or Sets GeoId
        /// </summary>
        [DataMember(Name="geoId", EmitDefaultValue=false)]
        public string GeoId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PropertyAttributes {\n");
            sb.Append("  PbKey: ").Append(PbKey).Append("\n");
            sb.Append("  PropApn: ").Append(PropApn).Append("\n");
            sb.Append("  PropType: ").Append(PropType).Append("\n");
            sb.Append("  PropSqFt: ").Append(PropSqFt).Append("\n");
            sb.Append("  BuildgSqFt: ").Append(BuildgSqFt).Append("\n");
            sb.Append("  BuildgSqFtSource: ").Append(BuildgSqFtSource).Append("\n");
            sb.Append("  LandUse: ").Append(LandUse).Append("\n");
            sb.Append("  Construction: ").Append(Construction).Append("\n");
            sb.Append("  RoofCoverType: ").Append(RoofCoverType).Append("\n");
            sb.Append("  Subdivision: ").Append(Subdivision).Append("\n");
            sb.Append("  Geometry: ").Append(Geometry).Append("\n");
            sb.Append("  BuiltYear: ").Append(BuiltYear).Append("\n");
            sb.Append("  Bedrooms: ").Append(Bedrooms).Append("\n");
            sb.Append("  Baths: ").Append(Baths).Append("\n");
            sb.Append("  PartialBaths: ").Append(PartialBaths).Append("\n");
            sb.Append("  BathFixtures: ").Append(BathFixtures).Append("\n");
            sb.Append("  Pool: ").Append(Pool).Append("\n");
            sb.Append("  PoolType: ").Append(PoolType).Append("\n");
            sb.Append("  Fireplace: ").Append(Fireplace).Append("\n");
            sb.Append("  FireplaceType: ").Append(FireplaceType).Append("\n");
            sb.Append("  MobileHome: ").Append(MobileHome).Append("\n");
            sb.Append("  HeatingType: ").Append(HeatingType).Append("\n");
            sb.Append("  CoolingType: ").Append(CoolingType).Append("\n");
            sb.Append("  AssessedValue: ").Append(AssessedValue).Append("\n");
            sb.Append("  MarketValue: ").Append(MarketValue).Append("\n");
            sb.Append("  AppraisedValue: ").Append(AppraisedValue).Append("\n");
            sb.Append("  TaxAmount: ").Append(TaxAmount).Append("\n");
            sb.Append("  TaxExemptions: ").Append(TaxExemptions).Append("\n");
            sb.Append("  CaExemptions: ").Append(CaExemptions).Append("\n");
            sb.Append("  SalesDate: ").Append(SalesDate).Append("\n");
            sb.Append("  PriorSaleDate: ").Append(PriorSaleDate).Append("\n");
            sb.Append("  PriorSalesPrice: ").Append(PriorSalesPrice).Append("\n");
            sb.Append("  PriorSaleDocType: ").Append(PriorSaleDocType).Append("\n");
            sb.Append("  PriorSaleCode: ").Append(PriorSaleCode).Append("\n");
            sb.Append("  PriorSaleFolioNumber: ").Append(PriorSaleFolioNumber).Append("\n");
            sb.Append("  PriorSalePageNumber: ").Append(PriorSalePageNumber).Append("\n");
            sb.Append("  PriorSaleDocNumber: ").Append(PriorSaleDocNumber).Append("\n");
            sb.Append("  Stories: ").Append(Stories).Append("\n");
            sb.Append("  LivingSqFt: ").Append(LivingSqFt).Append("\n");
            sb.Append("  RoofFrameType: ").Append(RoofFrameType).Append("\n");
            sb.Append("  Foundation: ").Append(Foundation).Append("\n");
            sb.Append("  BuildgCondition: ").Append(BuildgCondition).Append("\n");
            sb.Append("  BuildgCount: ").Append(BuildgCount).Append("\n");
            sb.Append("  BuildgUnitNo: ").Append(BuildgUnitNo).Append("\n");
            sb.Append("  BuildgFeaturesSqFt: ").Append(BuildgFeaturesSqFt).Append("\n");
            sb.Append("  TaxAddress: ").Append(TaxAddress).Append("\n");
            sb.Append("  FormattedTaxAddress: ").Append(FormattedTaxAddress).Append("\n");
            sb.Append("  SitusAddress: ").Append(SitusAddress).Append("\n");
            sb.Append("  Vacancy: ").Append(Vacancy).Append("\n");
            sb.Append("  Owners: ").Append(Owners).Append("\n");
            sb.Append("  AppraisedValueImp: ").Append(AppraisedValueImp).Append("\n");
            sb.Append("  AssessedValueImp: ").Append(AssessedValueImp).Append("\n");
            sb.Append("  BuildgType: ").Append(BuildgType).Append("\n");
            sb.Append("  BasementType: ").Append(BasementType).Append("\n");
            sb.Append("  EffectiveBuiltYear: ").Append(EffectiveBuiltYear).Append("\n");
            sb.Append("  ExteriorWalls: ").Append(ExteriorWalls).Append("\n");
            sb.Append("  GarageType: ").Append(GarageType).Append("\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("  MarketValueImp: ").Append(MarketValueImp).Append("\n");
            sb.Append("  AbsenteeOwner: ").Append(AbsenteeOwner).Append("\n");
            sb.Append("  ParkingSqFt: ").Append(ParkingSqFt).Append("\n");
            sb.Append("  ReplacementCost: ").Append(ReplacementCost).Append("\n");
            sb.Append("  RoofShapeType: ").Append(RoofShapeType).Append("\n");
            sb.Append("  BuildgStyle: ").Append(BuildgStyle).Append("\n");
            sb.Append("  BasementSqFt: ").Append(BasementSqFt).Append("\n");
            sb.Append("  OwnerType: ").Append(OwnerType).Append("\n");
            sb.Append("  OwnerVestType: ").Append(OwnerVestType).Append("\n");
            sb.Append("  Elevator: ").Append(Elevator).Append("\n");
            sb.Append("  PropApnSequence: ").Append(PropApnSequence).Append("\n");
            sb.Append("  FipsCode: ").Append(FipsCode).Append("\n");
            sb.Append("  PropZoning: ").Append(PropZoning).Append("\n");
            sb.Append("  LocCode: ").Append(LocCode).Append("\n");
            sb.Append("  LegalMapRef: ").Append(LegalMapRef).Append("\n");
            sb.Append("  LegalAssessorDesc: ").Append(LegalAssessorDesc).Append("\n");
            sb.Append("  LegalFullDesc: ").Append(LegalFullDesc).Append("\n");
            sb.Append("  LegalLotCode: ").Append(LegalLotCode).Append("\n");
            sb.Append("  LegalLotNumber: ").Append(LegalLotNumber).Append("\n");
            sb.Append("  LegalLandLot: ").Append(LegalLandLot).Append("\n");
            sb.Append("  LegalTractNumber: ").Append(LegalTractNumber).Append("\n");
            sb.Append("  LegalBlock: ").Append(LegalBlock).Append("\n");
            sb.Append("  LegalSection: ").Append(LegalSection).Append("\n");
            sb.Append("  LegalDistrict: ").Append(LegalDistrict).Append("\n");
            sb.Append("  LegalUnitNumber: ").Append(LegalUnitNumber).Append("\n");
            sb.Append("  LegalPhaseNumber: ").Append(LegalPhaseNumber).Append("\n");
            sb.Append("  LegalSubName: ").Append(LegalSubName).Append("\n");
            sb.Append("  LegalTownMuniName: ").Append(LegalTownMuniName).Append("\n");
            sb.Append("  LegalSectionTownshipRange: ").Append(LegalSectionTownshipRange).Append("\n");
            sb.Append("  PropAcres: ").Append(PropAcres).Append("\n");
            sb.Append("  PropFrontFootage: ").Append(PropFrontFootage).Append("\n");
            sb.Append("  PropDepthFootage: ").Append(PropDepthFootage).Append("\n");
            sb.Append("  BuildgView: ").Append(BuildgView).Append("\n");
            sb.Append("  PropSiteInfluene: ").Append(PropSiteInfluene).Append("\n");
            sb.Append("  BuildgName: ").Append(BuildgName).Append("\n");
            sb.Append("  BuildgQuality: ").Append(BuildgQuality).Append("\n");
            sb.Append("  BuildgImproveType: ").Append(BuildgImproveType).Append("\n");
            sb.Append("  GrossSqft: ").Append(GrossSqft).Append("\n");
            sb.Append("  AdjGrossSqft: ").Append(AdjGrossSqft).Append("\n");
            sb.Append("  BuildgClass: ").Append(BuildgClass).Append("\n");
            sb.Append("  InteriorWall: ").Append(InteriorWall).Append("\n");
            sb.Append("  FloorType: ").Append(FloorType).Append("\n");
            sb.Append("  Rooms: ").Append(Rooms).Append("\n");
            sb.Append("  OtherRooms: ").Append(OtherRooms).Append("\n");
            sb.Append("  PlumbingFixtures: ").Append(PlumbingFixtures).Append("\n");
            sb.Append("  ParkingCapacity: ").Append(ParkingCapacity).Append("\n");
            sb.Append("  EnergyType: ").Append(EnergyType).Append("\n");
            sb.Append("  FuelType: ").Append(FuelType).Append("\n");
            sb.Append("  SewerType: ").Append(SewerType).Append("\n");
            sb.Append("  WaterType: ").Append(WaterType).Append("\n");
            sb.Append("  Amenities: ").Append(Amenities).Append("\n");
            sb.Append("  ExtraFeatureSqft: ").Append(ExtraFeatureSqft).Append("\n");
            sb.Append("  BuildgImproveArea: ").Append(BuildgImproveArea).Append("\n");
            sb.Append("  TaxAccountNumber: ").Append(TaxAccountNumber).Append("\n");
            sb.Append("  TaxTapeCutDate: ").Append(TaxTapeCutDate).Append("\n");
            sb.Append("  TaxDocType: ").Append(TaxDocType).Append("\n");
            sb.Append("  TaxSalesPrice: ").Append(TaxSalesPrice).Append("\n");
            sb.Append("  TaxSalesPriceCode: ").Append(TaxSalesPriceCode).Append("\n");
            sb.Append("  RecBookNumber: ").Append(RecBookNumber).Append("\n");
            sb.Append("  RecPageNumber: ").Append(RecPageNumber).Append("\n");
            sb.Append("  RecDocNumber: ").Append(RecDocNumber).Append("\n");
            sb.Append("  TaxYear: ").Append(TaxYear).Append("\n");
            sb.Append("  TaxDelYear: ").Append(TaxDelYear).Append("\n");
            sb.Append("  AssessedYear: ").Append(AssessedYear).Append("\n");
            sb.Append("  AssessedLandValue: ").Append(AssessedLandValue).Append("\n");
            sb.Append("  MarketValueYear: ").Append(MarketValueYear).Append("\n");
            sb.Append("  MarketValueLand: ").Append(MarketValueLand).Append("\n");
            sb.Append("  AppraisedValueLand: ").Append(AppraisedValueLand).Append("\n");
            sb.Append("  TaxRateCode: ").Append(TaxRateCode).Append("\n");
            sb.Append("  PropLinkId: ").Append(PropLinkId).Append("\n");
            sb.Append("  GeoId: ").Append(GeoId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PropertyAttributes);
        }

        /// <summary>
        /// Returns true if PropertyAttributes instances are equal
        /// </summary>
        /// <param name="input">Instance of PropertyAttributes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PropertyAttributes input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PbKey == input.PbKey ||
                    (this.PbKey != null &&
                    this.PbKey.Equals(input.PbKey))
                ) && 
                (
                    this.PropApn == input.PropApn ||
                    (this.PropApn != null &&
                    this.PropApn.Equals(input.PropApn))
                ) && 
                (
                    this.PropType == input.PropType ||
                    (this.PropType != null &&
                    this.PropType.Equals(input.PropType))
                ) && 
                (
                    this.PropSqFt == input.PropSqFt ||
                    (this.PropSqFt != null &&
                    this.PropSqFt.Equals(input.PropSqFt))
                ) && 
                (
                    this.BuildgSqFt == input.BuildgSqFt ||
                    (this.BuildgSqFt != null &&
                    this.BuildgSqFt.Equals(input.BuildgSqFt))
                ) && 
                (
                    this.BuildgSqFtSource == input.BuildgSqFtSource ||
                    (this.BuildgSqFtSource != null &&
                    this.BuildgSqFtSource.Equals(input.BuildgSqFtSource))
                ) && 
                (
                    this.LandUse == input.LandUse ||
                    (this.LandUse != null &&
                    this.LandUse.Equals(input.LandUse))
                ) && 
                (
                    this.Construction == input.Construction ||
                    (this.Construction != null &&
                    this.Construction.Equals(input.Construction))
                ) && 
                (
                    this.RoofCoverType == input.RoofCoverType ||
                    (this.RoofCoverType != null &&
                    this.RoofCoverType.Equals(input.RoofCoverType))
                ) && 
                (
                    this.Subdivision == input.Subdivision ||
                    (this.Subdivision != null &&
                    this.Subdivision.Equals(input.Subdivision))
                ) && 
                (
                    this.Geometry == input.Geometry ||
                    (this.Geometry != null &&
                    this.Geometry.Equals(input.Geometry))
                ) && 
                (
                    this.BuiltYear == input.BuiltYear ||
                    (this.BuiltYear != null &&
                    this.BuiltYear.Equals(input.BuiltYear))
                ) && 
                (
                    this.Bedrooms == input.Bedrooms ||
                    (this.Bedrooms != null &&
                    this.Bedrooms.Equals(input.Bedrooms))
                ) && 
                (
                    this.Baths == input.Baths ||
                    (this.Baths != null &&
                    this.Baths.Equals(input.Baths))
                ) && 
                (
                    this.PartialBaths == input.PartialBaths ||
                    (this.PartialBaths != null &&
                    this.PartialBaths.Equals(input.PartialBaths))
                ) && 
                (
                    this.BathFixtures == input.BathFixtures ||
                    (this.BathFixtures != null &&
                    this.BathFixtures.Equals(input.BathFixtures))
                ) && 
                (
                    this.Pool == input.Pool ||
                    (this.Pool != null &&
                    this.Pool.Equals(input.Pool))
                ) && 
                (
                    this.PoolType == input.PoolType ||
                    (this.PoolType != null &&
                    this.PoolType.Equals(input.PoolType))
                ) && 
                (
                    this.Fireplace == input.Fireplace ||
                    (this.Fireplace != null &&
                    this.Fireplace.Equals(input.Fireplace))
                ) && 
                (
                    this.FireplaceType == input.FireplaceType ||
                    (this.FireplaceType != null &&
                    this.FireplaceType.Equals(input.FireplaceType))
                ) && 
                (
                    this.MobileHome == input.MobileHome ||
                    (this.MobileHome != null &&
                    this.MobileHome.Equals(input.MobileHome))
                ) && 
                (
                    this.HeatingType == input.HeatingType ||
                    (this.HeatingType != null &&
                    this.HeatingType.Equals(input.HeatingType))
                ) && 
                (
                    this.CoolingType == input.CoolingType ||
                    (this.CoolingType != null &&
                    this.CoolingType.Equals(input.CoolingType))
                ) && 
                (
                    this.AssessedValue == input.AssessedValue ||
                    (this.AssessedValue != null &&
                    this.AssessedValue.Equals(input.AssessedValue))
                ) && 
                (
                    this.MarketValue == input.MarketValue ||
                    (this.MarketValue != null &&
                    this.MarketValue.Equals(input.MarketValue))
                ) && 
                (
                    this.AppraisedValue == input.AppraisedValue ||
                    (this.AppraisedValue != null &&
                    this.AppraisedValue.Equals(input.AppraisedValue))
                ) && 
                (
                    this.TaxAmount == input.TaxAmount ||
                    (this.TaxAmount != null &&
                    this.TaxAmount.Equals(input.TaxAmount))
                ) && 
                (
                    this.TaxExemptions == input.TaxExemptions ||
                    this.TaxExemptions != null &&
                    input.TaxExemptions != null &&
                    this.TaxExemptions.SequenceEqual(input.TaxExemptions)
                ) && 
                (
                    this.CaExemptions == input.CaExemptions ||
                    (this.CaExemptions != null &&
                    this.CaExemptions.Equals(input.CaExemptions))
                ) && 
                (
                    this.SalesDate == input.SalesDate ||
                    (this.SalesDate != null &&
                    this.SalesDate.Equals(input.SalesDate))
                ) && 
                (
                    this.PriorSaleDate == input.PriorSaleDate ||
                    (this.PriorSaleDate != null &&
                    this.PriorSaleDate.Equals(input.PriorSaleDate))
                ) && 
                (
                    this.PriorSalesPrice == input.PriorSalesPrice ||
                    (this.PriorSalesPrice != null &&
                    this.PriorSalesPrice.Equals(input.PriorSalesPrice))
                ) && 
                (
                    this.PriorSaleDocType == input.PriorSaleDocType ||
                    (this.PriorSaleDocType != null &&
                    this.PriorSaleDocType.Equals(input.PriorSaleDocType))
                ) && 
                (
                    this.PriorSaleCode == input.PriorSaleCode ||
                    (this.PriorSaleCode != null &&
                    this.PriorSaleCode.Equals(input.PriorSaleCode))
                ) && 
                (
                    this.PriorSaleFolioNumber == input.PriorSaleFolioNumber ||
                    (this.PriorSaleFolioNumber != null &&
                    this.PriorSaleFolioNumber.Equals(input.PriorSaleFolioNumber))
                ) && 
                (
                    this.PriorSalePageNumber == input.PriorSalePageNumber ||
                    (this.PriorSalePageNumber != null &&
                    this.PriorSalePageNumber.Equals(input.PriorSalePageNumber))
                ) && 
                (
                    this.PriorSaleDocNumber == input.PriorSaleDocNumber ||
                    (this.PriorSaleDocNumber != null &&
                    this.PriorSaleDocNumber.Equals(input.PriorSaleDocNumber))
                ) && 
                (
                    this.Stories == input.Stories ||
                    (this.Stories != null &&
                    this.Stories.Equals(input.Stories))
                ) && 
                (
                    this.LivingSqFt == input.LivingSqFt ||
                    (this.LivingSqFt != null &&
                    this.LivingSqFt.Equals(input.LivingSqFt))
                ) && 
                (
                    this.RoofFrameType == input.RoofFrameType ||
                    (this.RoofFrameType != null &&
                    this.RoofFrameType.Equals(input.RoofFrameType))
                ) && 
                (
                    this.Foundation == input.Foundation ||
                    (this.Foundation != null &&
                    this.Foundation.Equals(input.Foundation))
                ) && 
                (
                    this.BuildgCondition == input.BuildgCondition ||
                    (this.BuildgCondition != null &&
                    this.BuildgCondition.Equals(input.BuildgCondition))
                ) && 
                (
                    this.BuildgCount == input.BuildgCount ||
                    (this.BuildgCount != null &&
                    this.BuildgCount.Equals(input.BuildgCount))
                ) && 
                (
                    this.BuildgUnitNo == input.BuildgUnitNo ||
                    (this.BuildgUnitNo != null &&
                    this.BuildgUnitNo.Equals(input.BuildgUnitNo))
                ) && 
                (
                    this.BuildgFeaturesSqFt == input.BuildgFeaturesSqFt ||
                    this.BuildgFeaturesSqFt != null &&
                    input.BuildgFeaturesSqFt != null &&
                    this.BuildgFeaturesSqFt.SequenceEqual(input.BuildgFeaturesSqFt)
                ) && 
                (
                    this.TaxAddress == input.TaxAddress ||
                    (this.TaxAddress != null &&
                    this.TaxAddress.Equals(input.TaxAddress))
                ) && 
                (
                    this.FormattedTaxAddress == input.FormattedTaxAddress ||
                    (this.FormattedTaxAddress != null &&
                    this.FormattedTaxAddress.Equals(input.FormattedTaxAddress))
                ) && 
                (
                    this.SitusAddress == input.SitusAddress ||
                    (this.SitusAddress != null &&
                    this.SitusAddress.Equals(input.SitusAddress))
                ) && 
                (
                    this.Vacancy == input.Vacancy ||
                    (this.Vacancy != null &&
                    this.Vacancy.Equals(input.Vacancy))
                ) && 
                (
                    this.Owners == input.Owners ||
                    this.Owners != null &&
                    input.Owners != null &&
                    this.Owners.SequenceEqual(input.Owners)
                ) && 
                (
                    this.AppraisedValueImp == input.AppraisedValueImp ||
                    (this.AppraisedValueImp != null &&
                    this.AppraisedValueImp.Equals(input.AppraisedValueImp))
                ) && 
                (
                    this.AssessedValueImp == input.AssessedValueImp ||
                    (this.AssessedValueImp != null &&
                    this.AssessedValueImp.Equals(input.AssessedValueImp))
                ) && 
                (
                    this.BuildgType == input.BuildgType ||
                    (this.BuildgType != null &&
                    this.BuildgType.Equals(input.BuildgType))
                ) && 
                (
                    this.BasementType == input.BasementType ||
                    (this.BasementType != null &&
                    this.BasementType.Equals(input.BasementType))
                ) && 
                (
                    this.EffectiveBuiltYear == input.EffectiveBuiltYear ||
                    (this.EffectiveBuiltYear != null &&
                    this.EffectiveBuiltYear.Equals(input.EffectiveBuiltYear))
                ) && 
                (
                    this.ExteriorWalls == input.ExteriorWalls ||
                    (this.ExteriorWalls != null &&
                    this.ExteriorWalls.Equals(input.ExteriorWalls))
                ) && 
                (
                    this.GarageType == input.GarageType ||
                    (this.GarageType != null &&
                    this.GarageType.Equals(input.GarageType))
                ) && 
                (
                    this.LastUpdated == input.LastUpdated ||
                    (this.LastUpdated != null &&
                    this.LastUpdated.Equals(input.LastUpdated))
                ) && 
                (
                    this.MarketValueImp == input.MarketValueImp ||
                    (this.MarketValueImp != null &&
                    this.MarketValueImp.Equals(input.MarketValueImp))
                ) && 
                (
                    this.AbsenteeOwner == input.AbsenteeOwner ||
                    (this.AbsenteeOwner != null &&
                    this.AbsenteeOwner.Equals(input.AbsenteeOwner))
                ) && 
                (
                    this.ParkingSqFt == input.ParkingSqFt ||
                    (this.ParkingSqFt != null &&
                    this.ParkingSqFt.Equals(input.ParkingSqFt))
                ) && 
                (
                    this.ReplacementCost == input.ReplacementCost ||
                    (this.ReplacementCost != null &&
                    this.ReplacementCost.Equals(input.ReplacementCost))
                ) && 
                (
                    this.RoofShapeType == input.RoofShapeType ||
                    (this.RoofShapeType != null &&
                    this.RoofShapeType.Equals(input.RoofShapeType))
                ) && 
                (
                    this.BuildgStyle == input.BuildgStyle ||
                    (this.BuildgStyle != null &&
                    this.BuildgStyle.Equals(input.BuildgStyle))
                ) && 
                (
                    this.BasementSqFt == input.BasementSqFt ||
                    (this.BasementSqFt != null &&
                    this.BasementSqFt.Equals(input.BasementSqFt))
                ) && 
                (
                    this.OwnerType == input.OwnerType ||
                    (this.OwnerType != null &&
                    this.OwnerType.Equals(input.OwnerType))
                ) && 
                (
                    this.OwnerVestType == input.OwnerVestType ||
                    (this.OwnerVestType != null &&
                    this.OwnerVestType.Equals(input.OwnerVestType))
                ) && 
                (
                    this.Elevator == input.Elevator ||
                    (this.Elevator != null &&
                    this.Elevator.Equals(input.Elevator))
                ) && 
                (
                    this.PropApnSequence == input.PropApnSequence ||
                    (this.PropApnSequence != null &&
                    this.PropApnSequence.Equals(input.PropApnSequence))
                ) && 
                (
                    this.FipsCode == input.FipsCode ||
                    (this.FipsCode != null &&
                    this.FipsCode.Equals(input.FipsCode))
                ) && 
                (
                    this.PropZoning == input.PropZoning ||
                    (this.PropZoning != null &&
                    this.PropZoning.Equals(input.PropZoning))
                ) && 
                (
                    this.LocCode == input.LocCode ||
                    (this.LocCode != null &&
                    this.LocCode.Equals(input.LocCode))
                ) && 
                (
                    this.LegalMapRef == input.LegalMapRef ||
                    (this.LegalMapRef != null &&
                    this.LegalMapRef.Equals(input.LegalMapRef))
                ) && 
                (
                    this.LegalAssessorDesc == input.LegalAssessorDesc ||
                    (this.LegalAssessorDesc != null &&
                    this.LegalAssessorDesc.Equals(input.LegalAssessorDesc))
                ) && 
                (
                    this.LegalFullDesc == input.LegalFullDesc ||
                    (this.LegalFullDesc != null &&
                    this.LegalFullDesc.Equals(input.LegalFullDesc))
                ) && 
                (
                    this.LegalLotCode == input.LegalLotCode ||
                    (this.LegalLotCode != null &&
                    this.LegalLotCode.Equals(input.LegalLotCode))
                ) && 
                (
                    this.LegalLotNumber == input.LegalLotNumber ||
                    (this.LegalLotNumber != null &&
                    this.LegalLotNumber.Equals(input.LegalLotNumber))
                ) && 
                (
                    this.LegalLandLot == input.LegalLandLot ||
                    (this.LegalLandLot != null &&
                    this.LegalLandLot.Equals(input.LegalLandLot))
                ) && 
                (
                    this.LegalTractNumber == input.LegalTractNumber ||
                    (this.LegalTractNumber != null &&
                    this.LegalTractNumber.Equals(input.LegalTractNumber))
                ) && 
                (
                    this.LegalBlock == input.LegalBlock ||
                    (this.LegalBlock != null &&
                    this.LegalBlock.Equals(input.LegalBlock))
                ) && 
                (
                    this.LegalSection == input.LegalSection ||
                    (this.LegalSection != null &&
                    this.LegalSection.Equals(input.LegalSection))
                ) && 
                (
                    this.LegalDistrict == input.LegalDistrict ||
                    (this.LegalDistrict != null &&
                    this.LegalDistrict.Equals(input.LegalDistrict))
                ) && 
                (
                    this.LegalUnitNumber == input.LegalUnitNumber ||
                    (this.LegalUnitNumber != null &&
                    this.LegalUnitNumber.Equals(input.LegalUnitNumber))
                ) && 
                (
                    this.LegalPhaseNumber == input.LegalPhaseNumber ||
                    (this.LegalPhaseNumber != null &&
                    this.LegalPhaseNumber.Equals(input.LegalPhaseNumber))
                ) && 
                (
                    this.LegalSubName == input.LegalSubName ||
                    (this.LegalSubName != null &&
                    this.LegalSubName.Equals(input.LegalSubName))
                ) && 
                (
                    this.LegalTownMuniName == input.LegalTownMuniName ||
                    (this.LegalTownMuniName != null &&
                    this.LegalTownMuniName.Equals(input.LegalTownMuniName))
                ) && 
                (
                    this.LegalSectionTownshipRange == input.LegalSectionTownshipRange ||
                    (this.LegalSectionTownshipRange != null &&
                    this.LegalSectionTownshipRange.Equals(input.LegalSectionTownshipRange))
                ) && 
                (
                    this.PropAcres == input.PropAcres ||
                    (this.PropAcres != null &&
                    this.PropAcres.Equals(input.PropAcres))
                ) && 
                (
                    this.PropFrontFootage == input.PropFrontFootage ||
                    (this.PropFrontFootage != null &&
                    this.PropFrontFootage.Equals(input.PropFrontFootage))
                ) && 
                (
                    this.PropDepthFootage == input.PropDepthFootage ||
                    (this.PropDepthFootage != null &&
                    this.PropDepthFootage.Equals(input.PropDepthFootage))
                ) && 
                (
                    this.BuildgView == input.BuildgView ||
                    (this.BuildgView != null &&
                    this.BuildgView.Equals(input.BuildgView))
                ) && 
                (
                    this.PropSiteInfluene == input.PropSiteInfluene ||
                    (this.PropSiteInfluene != null &&
                    this.PropSiteInfluene.Equals(input.PropSiteInfluene))
                ) && 
                (
                    this.BuildgName == input.BuildgName ||
                    (this.BuildgName != null &&
                    this.BuildgName.Equals(input.BuildgName))
                ) && 
                (
                    this.BuildgQuality == input.BuildgQuality ||
                    (this.BuildgQuality != null &&
                    this.BuildgQuality.Equals(input.BuildgQuality))
                ) && 
                (
                    this.BuildgImproveType == input.BuildgImproveType ||
                    (this.BuildgImproveType != null &&
                    this.BuildgImproveType.Equals(input.BuildgImproveType))
                ) && 
                (
                    this.GrossSqft == input.GrossSqft ||
                    (this.GrossSqft != null &&
                    this.GrossSqft.Equals(input.GrossSqft))
                ) && 
                (
                    this.AdjGrossSqft == input.AdjGrossSqft ||
                    (this.AdjGrossSqft != null &&
                    this.AdjGrossSqft.Equals(input.AdjGrossSqft))
                ) && 
                (
                    this.BuildgClass == input.BuildgClass ||
                    (this.BuildgClass != null &&
                    this.BuildgClass.Equals(input.BuildgClass))
                ) && 
                (
                    this.InteriorWall == input.InteriorWall ||
                    (this.InteriorWall != null &&
                    this.InteriorWall.Equals(input.InteriorWall))
                ) && 
                (
                    this.FloorType == input.FloorType ||
                    (this.FloorType != null &&
                    this.FloorType.Equals(input.FloorType))
                ) && 
                (
                    this.Rooms == input.Rooms ||
                    (this.Rooms != null &&
                    this.Rooms.Equals(input.Rooms))
                ) && 
                (
                    this.OtherRooms == input.OtherRooms ||
                    (this.OtherRooms != null &&
                    this.OtherRooms.Equals(input.OtherRooms))
                ) && 
                (
                    this.PlumbingFixtures == input.PlumbingFixtures ||
                    (this.PlumbingFixtures != null &&
                    this.PlumbingFixtures.Equals(input.PlumbingFixtures))
                ) && 
                (
                    this.ParkingCapacity == input.ParkingCapacity ||
                    (this.ParkingCapacity != null &&
                    this.ParkingCapacity.Equals(input.ParkingCapacity))
                ) && 
                (
                    this.EnergyType == input.EnergyType ||
                    (this.EnergyType != null &&
                    this.EnergyType.Equals(input.EnergyType))
                ) && 
                (
                    this.FuelType == input.FuelType ||
                    (this.FuelType != null &&
                    this.FuelType.Equals(input.FuelType))
                ) && 
                (
                    this.SewerType == input.SewerType ||
                    (this.SewerType != null &&
                    this.SewerType.Equals(input.SewerType))
                ) && 
                (
                    this.WaterType == input.WaterType ||
                    (this.WaterType != null &&
                    this.WaterType.Equals(input.WaterType))
                ) && 
                (
                    this.Amenities == input.Amenities ||
                    (this.Amenities != null &&
                    this.Amenities.Equals(input.Amenities))
                ) && 
                (
                    this.ExtraFeatureSqft == input.ExtraFeatureSqft ||
                    this.ExtraFeatureSqft != null &&
                    input.ExtraFeatureSqft != null &&
                    this.ExtraFeatureSqft.SequenceEqual(input.ExtraFeatureSqft)
                ) && 
                (
                    this.BuildgImproveArea == input.BuildgImproveArea ||
                    this.BuildgImproveArea != null &&
                    input.BuildgImproveArea != null &&
                    this.BuildgImproveArea.SequenceEqual(input.BuildgImproveArea)
                ) && 
                (
                    this.TaxAccountNumber == input.TaxAccountNumber ||
                    (this.TaxAccountNumber != null &&
                    this.TaxAccountNumber.Equals(input.TaxAccountNumber))
                ) && 
                (
                    this.TaxTapeCutDate == input.TaxTapeCutDate ||
                    (this.TaxTapeCutDate != null &&
                    this.TaxTapeCutDate.Equals(input.TaxTapeCutDate))
                ) && 
                (
                    this.TaxDocType == input.TaxDocType ||
                    (this.TaxDocType != null &&
                    this.TaxDocType.Equals(input.TaxDocType))
                ) && 
                (
                    this.TaxSalesPrice == input.TaxSalesPrice ||
                    (this.TaxSalesPrice != null &&
                    this.TaxSalesPrice.Equals(input.TaxSalesPrice))
                ) && 
                (
                    this.TaxSalesPriceCode == input.TaxSalesPriceCode ||
                    (this.TaxSalesPriceCode != null &&
                    this.TaxSalesPriceCode.Equals(input.TaxSalesPriceCode))
                ) && 
                (
                    this.RecBookNumber == input.RecBookNumber ||
                    (this.RecBookNumber != null &&
                    this.RecBookNumber.Equals(input.RecBookNumber))
                ) && 
                (
                    this.RecPageNumber == input.RecPageNumber ||
                    (this.RecPageNumber != null &&
                    this.RecPageNumber.Equals(input.RecPageNumber))
                ) && 
                (
                    this.RecDocNumber == input.RecDocNumber ||
                    (this.RecDocNumber != null &&
                    this.RecDocNumber.Equals(input.RecDocNumber))
                ) && 
                (
                    this.TaxYear == input.TaxYear ||
                    (this.TaxYear != null &&
                    this.TaxYear.Equals(input.TaxYear))
                ) && 
                (
                    this.TaxDelYear == input.TaxDelYear ||
                    (this.TaxDelYear != null &&
                    this.TaxDelYear.Equals(input.TaxDelYear))
                ) && 
                (
                    this.AssessedYear == input.AssessedYear ||
                    (this.AssessedYear != null &&
                    this.AssessedYear.Equals(input.AssessedYear))
                ) && 
                (
                    this.AssessedLandValue == input.AssessedLandValue ||
                    (this.AssessedLandValue != null &&
                    this.AssessedLandValue.Equals(input.AssessedLandValue))
                ) && 
                (
                    this.MarketValueYear == input.MarketValueYear ||
                    (this.MarketValueYear != null &&
                    this.MarketValueYear.Equals(input.MarketValueYear))
                ) && 
                (
                    this.MarketValueLand == input.MarketValueLand ||
                    (this.MarketValueLand != null &&
                    this.MarketValueLand.Equals(input.MarketValueLand))
                ) && 
                (
                    this.AppraisedValueLand == input.AppraisedValueLand ||
                    (this.AppraisedValueLand != null &&
                    this.AppraisedValueLand.Equals(input.AppraisedValueLand))
                ) && 
                (
                    this.TaxRateCode == input.TaxRateCode ||
                    (this.TaxRateCode != null &&
                    this.TaxRateCode.Equals(input.TaxRateCode))
                ) && 
                (
                    this.PropLinkId == input.PropLinkId ||
                    (this.PropLinkId != null &&
                    this.PropLinkId.Equals(input.PropLinkId))
                ) && 
                (
                    this.GeoId == input.GeoId ||
                    (this.GeoId != null &&
                    this.GeoId.Equals(input.GeoId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PbKey != null)
                    hashCode = hashCode * 59 + this.PbKey.GetHashCode();
                if (this.PropApn != null)
                    hashCode = hashCode * 59 + this.PropApn.GetHashCode();
                if (this.PropType != null)
                    hashCode = hashCode * 59 + this.PropType.GetHashCode();
                if (this.PropSqFt != null)
                    hashCode = hashCode * 59 + this.PropSqFt.GetHashCode();
                if (this.BuildgSqFt != null)
                    hashCode = hashCode * 59 + this.BuildgSqFt.GetHashCode();
                if (this.BuildgSqFtSource != null)
                    hashCode = hashCode * 59 + this.BuildgSqFtSource.GetHashCode();
                if (this.LandUse != null)
                    hashCode = hashCode * 59 + this.LandUse.GetHashCode();
                if (this.Construction != null)
                    hashCode = hashCode * 59 + this.Construction.GetHashCode();
                if (this.RoofCoverType != null)
                    hashCode = hashCode * 59 + this.RoofCoverType.GetHashCode();
                if (this.Subdivision != null)
                    hashCode = hashCode * 59 + this.Subdivision.GetHashCode();
                if (this.Geometry != null)
                    hashCode = hashCode * 59 + this.Geometry.GetHashCode();
                if (this.BuiltYear != null)
                    hashCode = hashCode * 59 + this.BuiltYear.GetHashCode();
                if (this.Bedrooms != null)
                    hashCode = hashCode * 59 + this.Bedrooms.GetHashCode();
                if (this.Baths != null)
                    hashCode = hashCode * 59 + this.Baths.GetHashCode();
                if (this.PartialBaths != null)
                    hashCode = hashCode * 59 + this.PartialBaths.GetHashCode();
                if (this.BathFixtures != null)
                    hashCode = hashCode * 59 + this.BathFixtures.GetHashCode();
                if (this.Pool != null)
                    hashCode = hashCode * 59 + this.Pool.GetHashCode();
                if (this.PoolType != null)
                    hashCode = hashCode * 59 + this.PoolType.GetHashCode();
                if (this.Fireplace != null)
                    hashCode = hashCode * 59 + this.Fireplace.GetHashCode();
                if (this.FireplaceType != null)
                    hashCode = hashCode * 59 + this.FireplaceType.GetHashCode();
                if (this.MobileHome != null)
                    hashCode = hashCode * 59 + this.MobileHome.GetHashCode();
                if (this.HeatingType != null)
                    hashCode = hashCode * 59 + this.HeatingType.GetHashCode();
                if (this.CoolingType != null)
                    hashCode = hashCode * 59 + this.CoolingType.GetHashCode();
                if (this.AssessedValue != null)
                    hashCode = hashCode * 59 + this.AssessedValue.GetHashCode();
                if (this.MarketValue != null)
                    hashCode = hashCode * 59 + this.MarketValue.GetHashCode();
                if (this.AppraisedValue != null)
                    hashCode = hashCode * 59 + this.AppraisedValue.GetHashCode();
                if (this.TaxAmount != null)
                    hashCode = hashCode * 59 + this.TaxAmount.GetHashCode();
                if (this.TaxExemptions != null)
                    hashCode = hashCode * 59 + this.TaxExemptions.GetHashCode();
                if (this.CaExemptions != null)
                    hashCode = hashCode * 59 + this.CaExemptions.GetHashCode();
                if (this.SalesDate != null)
                    hashCode = hashCode * 59 + this.SalesDate.GetHashCode();
                if (this.PriorSaleDate != null)
                    hashCode = hashCode * 59 + this.PriorSaleDate.GetHashCode();
                if (this.PriorSalesPrice != null)
                    hashCode = hashCode * 59 + this.PriorSalesPrice.GetHashCode();
                if (this.PriorSaleDocType != null)
                    hashCode = hashCode * 59 + this.PriorSaleDocType.GetHashCode();
                if (this.PriorSaleCode != null)
                    hashCode = hashCode * 59 + this.PriorSaleCode.GetHashCode();
                if (this.PriorSaleFolioNumber != null)
                    hashCode = hashCode * 59 + this.PriorSaleFolioNumber.GetHashCode();
                if (this.PriorSalePageNumber != null)
                    hashCode = hashCode * 59 + this.PriorSalePageNumber.GetHashCode();
                if (this.PriorSaleDocNumber != null)
                    hashCode = hashCode * 59 + this.PriorSaleDocNumber.GetHashCode();
                if (this.Stories != null)
                    hashCode = hashCode * 59 + this.Stories.GetHashCode();
                if (this.LivingSqFt != null)
                    hashCode = hashCode * 59 + this.LivingSqFt.GetHashCode();
                if (this.RoofFrameType != null)
                    hashCode = hashCode * 59 + this.RoofFrameType.GetHashCode();
                if (this.Foundation != null)
                    hashCode = hashCode * 59 + this.Foundation.GetHashCode();
                if (this.BuildgCondition != null)
                    hashCode = hashCode * 59 + this.BuildgCondition.GetHashCode();
                if (this.BuildgCount != null)
                    hashCode = hashCode * 59 + this.BuildgCount.GetHashCode();
                if (this.BuildgUnitNo != null)
                    hashCode = hashCode * 59 + this.BuildgUnitNo.GetHashCode();
                if (this.BuildgFeaturesSqFt != null)
                    hashCode = hashCode * 59 + this.BuildgFeaturesSqFt.GetHashCode();
                if (this.TaxAddress != null)
                    hashCode = hashCode * 59 + this.TaxAddress.GetHashCode();
                if (this.FormattedTaxAddress != null)
                    hashCode = hashCode * 59 + this.FormattedTaxAddress.GetHashCode();
                if (this.SitusAddress != null)
                    hashCode = hashCode * 59 + this.SitusAddress.GetHashCode();
                if (this.Vacancy != null)
                    hashCode = hashCode * 59 + this.Vacancy.GetHashCode();
                if (this.Owners != null)
                    hashCode = hashCode * 59 + this.Owners.GetHashCode();
                if (this.AppraisedValueImp != null)
                    hashCode = hashCode * 59 + this.AppraisedValueImp.GetHashCode();
                if (this.AssessedValueImp != null)
                    hashCode = hashCode * 59 + this.AssessedValueImp.GetHashCode();
                if (this.BuildgType != null)
                    hashCode = hashCode * 59 + this.BuildgType.GetHashCode();
                if (this.BasementType != null)
                    hashCode = hashCode * 59 + this.BasementType.GetHashCode();
                if (this.EffectiveBuiltYear != null)
                    hashCode = hashCode * 59 + this.EffectiveBuiltYear.GetHashCode();
                if (this.ExteriorWalls != null)
                    hashCode = hashCode * 59 + this.ExteriorWalls.GetHashCode();
                if (this.GarageType != null)
                    hashCode = hashCode * 59 + this.GarageType.GetHashCode();
                if (this.LastUpdated != null)
                    hashCode = hashCode * 59 + this.LastUpdated.GetHashCode();
                if (this.MarketValueImp != null)
                    hashCode = hashCode * 59 + this.MarketValueImp.GetHashCode();
                if (this.AbsenteeOwner != null)
                    hashCode = hashCode * 59 + this.AbsenteeOwner.GetHashCode();
                if (this.ParkingSqFt != null)
                    hashCode = hashCode * 59 + this.ParkingSqFt.GetHashCode();
                if (this.ReplacementCost != null)
                    hashCode = hashCode * 59 + this.ReplacementCost.GetHashCode();
                if (this.RoofShapeType != null)
                    hashCode = hashCode * 59 + this.RoofShapeType.GetHashCode();
                if (this.BuildgStyle != null)
                    hashCode = hashCode * 59 + this.BuildgStyle.GetHashCode();
                if (this.BasementSqFt != null)
                    hashCode = hashCode * 59 + this.BasementSqFt.GetHashCode();
                if (this.OwnerType != null)
                    hashCode = hashCode * 59 + this.OwnerType.GetHashCode();
                if (this.OwnerVestType != null)
                    hashCode = hashCode * 59 + this.OwnerVestType.GetHashCode();
                if (this.Elevator != null)
                    hashCode = hashCode * 59 + this.Elevator.GetHashCode();
                if (this.PropApnSequence != null)
                    hashCode = hashCode * 59 + this.PropApnSequence.GetHashCode();
                if (this.FipsCode != null)
                    hashCode = hashCode * 59 + this.FipsCode.GetHashCode();
                if (this.PropZoning != null)
                    hashCode = hashCode * 59 + this.PropZoning.GetHashCode();
                if (this.LocCode != null)
                    hashCode = hashCode * 59 + this.LocCode.GetHashCode();
                if (this.LegalMapRef != null)
                    hashCode = hashCode * 59 + this.LegalMapRef.GetHashCode();
                if (this.LegalAssessorDesc != null)
                    hashCode = hashCode * 59 + this.LegalAssessorDesc.GetHashCode();
                if (this.LegalFullDesc != null)
                    hashCode = hashCode * 59 + this.LegalFullDesc.GetHashCode();
                if (this.LegalLotCode != null)
                    hashCode = hashCode * 59 + this.LegalLotCode.GetHashCode();
                if (this.LegalLotNumber != null)
                    hashCode = hashCode * 59 + this.LegalLotNumber.GetHashCode();
                if (this.LegalLandLot != null)
                    hashCode = hashCode * 59 + this.LegalLandLot.GetHashCode();
                if (this.LegalTractNumber != null)
                    hashCode = hashCode * 59 + this.LegalTractNumber.GetHashCode();
                if (this.LegalBlock != null)
                    hashCode = hashCode * 59 + this.LegalBlock.GetHashCode();
                if (this.LegalSection != null)
                    hashCode = hashCode * 59 + this.LegalSection.GetHashCode();
                if (this.LegalDistrict != null)
                    hashCode = hashCode * 59 + this.LegalDistrict.GetHashCode();
                if (this.LegalUnitNumber != null)
                    hashCode = hashCode * 59 + this.LegalUnitNumber.GetHashCode();
                if (this.LegalPhaseNumber != null)
                    hashCode = hashCode * 59 + this.LegalPhaseNumber.GetHashCode();
                if (this.LegalSubName != null)
                    hashCode = hashCode * 59 + this.LegalSubName.GetHashCode();
                if (this.LegalTownMuniName != null)
                    hashCode = hashCode * 59 + this.LegalTownMuniName.GetHashCode();
                if (this.LegalSectionTownshipRange != null)
                    hashCode = hashCode * 59 + this.LegalSectionTownshipRange.GetHashCode();
                if (this.PropAcres != null)
                    hashCode = hashCode * 59 + this.PropAcres.GetHashCode();
                if (this.PropFrontFootage != null)
                    hashCode = hashCode * 59 + this.PropFrontFootage.GetHashCode();
                if (this.PropDepthFootage != null)
                    hashCode = hashCode * 59 + this.PropDepthFootage.GetHashCode();
                if (this.BuildgView != null)
                    hashCode = hashCode * 59 + this.BuildgView.GetHashCode();
                if (this.PropSiteInfluene != null)
                    hashCode = hashCode * 59 + this.PropSiteInfluene.GetHashCode();
                if (this.BuildgName != null)
                    hashCode = hashCode * 59 + this.BuildgName.GetHashCode();
                if (this.BuildgQuality != null)
                    hashCode = hashCode * 59 + this.BuildgQuality.GetHashCode();
                if (this.BuildgImproveType != null)
                    hashCode = hashCode * 59 + this.BuildgImproveType.GetHashCode();
                if (this.GrossSqft != null)
                    hashCode = hashCode * 59 + this.GrossSqft.GetHashCode();
                if (this.AdjGrossSqft != null)
                    hashCode = hashCode * 59 + this.AdjGrossSqft.GetHashCode();
                if (this.BuildgClass != null)
                    hashCode = hashCode * 59 + this.BuildgClass.GetHashCode();
                if (this.InteriorWall != null)
                    hashCode = hashCode * 59 + this.InteriorWall.GetHashCode();
                if (this.FloorType != null)
                    hashCode = hashCode * 59 + this.FloorType.GetHashCode();
                if (this.Rooms != null)
                    hashCode = hashCode * 59 + this.Rooms.GetHashCode();
                if (this.OtherRooms != null)
                    hashCode = hashCode * 59 + this.OtherRooms.GetHashCode();
                if (this.PlumbingFixtures != null)
                    hashCode = hashCode * 59 + this.PlumbingFixtures.GetHashCode();
                if (this.ParkingCapacity != null)
                    hashCode = hashCode * 59 + this.ParkingCapacity.GetHashCode();
                if (this.EnergyType != null)
                    hashCode = hashCode * 59 + this.EnergyType.GetHashCode();
                if (this.FuelType != null)
                    hashCode = hashCode * 59 + this.FuelType.GetHashCode();
                if (this.SewerType != null)
                    hashCode = hashCode * 59 + this.SewerType.GetHashCode();
                if (this.WaterType != null)
                    hashCode = hashCode * 59 + this.WaterType.GetHashCode();
                if (this.Amenities != null)
                    hashCode = hashCode * 59 + this.Amenities.GetHashCode();
                if (this.ExtraFeatureSqft != null)
                    hashCode = hashCode * 59 + this.ExtraFeatureSqft.GetHashCode();
                if (this.BuildgImproveArea != null)
                    hashCode = hashCode * 59 + this.BuildgImproveArea.GetHashCode();
                if (this.TaxAccountNumber != null)
                    hashCode = hashCode * 59 + this.TaxAccountNumber.GetHashCode();
                if (this.TaxTapeCutDate != null)
                    hashCode = hashCode * 59 + this.TaxTapeCutDate.GetHashCode();
                if (this.TaxDocType != null)
                    hashCode = hashCode * 59 + this.TaxDocType.GetHashCode();
                if (this.TaxSalesPrice != null)
                    hashCode = hashCode * 59 + this.TaxSalesPrice.GetHashCode();
                if (this.TaxSalesPriceCode != null)
                    hashCode = hashCode * 59 + this.TaxSalesPriceCode.GetHashCode();
                if (this.RecBookNumber != null)
                    hashCode = hashCode * 59 + this.RecBookNumber.GetHashCode();
                if (this.RecPageNumber != null)
                    hashCode = hashCode * 59 + this.RecPageNumber.GetHashCode();
                if (this.RecDocNumber != null)
                    hashCode = hashCode * 59 + this.RecDocNumber.GetHashCode();
                if (this.TaxYear != null)
                    hashCode = hashCode * 59 + this.TaxYear.GetHashCode();
                if (this.TaxDelYear != null)
                    hashCode = hashCode * 59 + this.TaxDelYear.GetHashCode();
                if (this.AssessedYear != null)
                    hashCode = hashCode * 59 + this.AssessedYear.GetHashCode();
                if (this.AssessedLandValue != null)
                    hashCode = hashCode * 59 + this.AssessedLandValue.GetHashCode();
                if (this.MarketValueYear != null)
                    hashCode = hashCode * 59 + this.MarketValueYear.GetHashCode();
                if (this.MarketValueLand != null)
                    hashCode = hashCode * 59 + this.MarketValueLand.GetHashCode();
                if (this.AppraisedValueLand != null)
                    hashCode = hashCode * 59 + this.AppraisedValueLand.GetHashCode();
                if (this.TaxRateCode != null)
                    hashCode = hashCode * 59 + this.TaxRateCode.GetHashCode();
                if (this.PropLinkId != null)
                    hashCode = hashCode * 59 + this.PropLinkId.GetHashCode();
                if (this.GeoId != null)
                    hashCode = hashCode * 59 + this.GeoId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
