/* 
 * Precisely APIs
 *
 * Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.
 *
 * OpenAPI spec version: 11.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace com.precisely.apis.Model
{
    /// <summary>
    /// SchoolProfile
    /// </summary>
    [DataContract]
    public partial class SchoolProfile :  IEquatable<SchoolProfile>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SchoolProfile" /> class.
        /// </summary>
        /// <param name="BlueRibbon">BlueRibbon.</param>
        /// <param name="InternationalBaccalaureate">InternationalBaccalaureate.</param>
        /// <param name="TitleI">TitleI.</param>
        /// <param name="ExpensePerStudent">ExpensePerStudent.</param>
        /// <param name="StudentBelowPovertyPct">StudentBelowPovertyPct.</param>
        /// <param name="AdvancePlacementClasses">AdvancePlacementClasses.</param>
        /// <param name="FreeOrReducedPriceLunches">FreeOrReducedPriceLunches.</param>
        /// <param name="StudentEthnicity">StudentEthnicity.</param>
        public SchoolProfile(string BlueRibbon = null, string InternationalBaccalaureate = null, string TitleI = null, string ExpensePerStudent = null, string StudentBelowPovertyPct = null, string AdvancePlacementClasses = null, FreeOrReducedPriceLunches FreeOrReducedPriceLunches = null, StudentEthnicity StudentEthnicity = null)
        {
            this.BlueRibbon = BlueRibbon;
            this.InternationalBaccalaureate = InternationalBaccalaureate;
            this.TitleI = TitleI;
            this.ExpensePerStudent = ExpensePerStudent;
            this.StudentBelowPovertyPct = StudentBelowPovertyPct;
            this.AdvancePlacementClasses = AdvancePlacementClasses;
            this.FreeOrReducedPriceLunches = FreeOrReducedPriceLunches;
            this.StudentEthnicity = StudentEthnicity;
        }
        
        /// <summary>
        /// Gets or Sets BlueRibbon
        /// </summary>
        [DataMember(Name="blueRibbon", EmitDefaultValue=false)]
        public string BlueRibbon { get; set; }
        /// <summary>
        /// Gets or Sets InternationalBaccalaureate
        /// </summary>
        [DataMember(Name="internationalBaccalaureate", EmitDefaultValue=false)]
        public string InternationalBaccalaureate { get; set; }
        /// <summary>
        /// Gets or Sets TitleI
        /// </summary>
        [DataMember(Name="titleI", EmitDefaultValue=false)]
        public string TitleI { get; set; }
        /// <summary>
        /// Gets or Sets ExpensePerStudent
        /// </summary>
        [DataMember(Name="expensePerStudent", EmitDefaultValue=false)]
        public string ExpensePerStudent { get; set; }
        /// <summary>
        /// Gets or Sets StudentBelowPovertyPct
        /// </summary>
        [DataMember(Name="studentBelowPovertyPct", EmitDefaultValue=false)]
        public string StudentBelowPovertyPct { get; set; }
        /// <summary>
        /// Gets or Sets AdvancePlacementClasses
        /// </summary>
        [DataMember(Name="advancePlacementClasses", EmitDefaultValue=false)]
        public string AdvancePlacementClasses { get; set; }
        /// <summary>
        /// Gets or Sets FreeOrReducedPriceLunches
        /// </summary>
        [DataMember(Name="freeOrReducedPriceLunches", EmitDefaultValue=false)]
        public FreeOrReducedPriceLunches FreeOrReducedPriceLunches { get; set; }
        /// <summary>
        /// Gets or Sets StudentEthnicity
        /// </summary>
        [DataMember(Name="studentEthnicity", EmitDefaultValue=false)]
        public StudentEthnicity StudentEthnicity { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SchoolProfile {\n");
            sb.Append("  BlueRibbon: ").Append(BlueRibbon).Append("\n");
            sb.Append("  InternationalBaccalaureate: ").Append(InternationalBaccalaureate).Append("\n");
            sb.Append("  TitleI: ").Append(TitleI).Append("\n");
            sb.Append("  ExpensePerStudent: ").Append(ExpensePerStudent).Append("\n");
            sb.Append("  StudentBelowPovertyPct: ").Append(StudentBelowPovertyPct).Append("\n");
            sb.Append("  AdvancePlacementClasses: ").Append(AdvancePlacementClasses).Append("\n");
            sb.Append("  FreeOrReducedPriceLunches: ").Append(FreeOrReducedPriceLunches).Append("\n");
            sb.Append("  StudentEthnicity: ").Append(StudentEthnicity).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as SchoolProfile);
        }

        /// <summary>
        /// Returns true if SchoolProfile instances are equal
        /// </summary>
        /// <param name="other">Instance of SchoolProfile to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SchoolProfile other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.BlueRibbon == other.BlueRibbon ||
                    this.BlueRibbon != null &&
                    this.BlueRibbon.Equals(other.BlueRibbon)
                ) && 
                (
                    this.InternationalBaccalaureate == other.InternationalBaccalaureate ||
                    this.InternationalBaccalaureate != null &&
                    this.InternationalBaccalaureate.Equals(other.InternationalBaccalaureate)
                ) && 
                (
                    this.TitleI == other.TitleI ||
                    this.TitleI != null &&
                    this.TitleI.Equals(other.TitleI)
                ) && 
                (
                    this.ExpensePerStudent == other.ExpensePerStudent ||
                    this.ExpensePerStudent != null &&
                    this.ExpensePerStudent.Equals(other.ExpensePerStudent)
                ) && 
                (
                    this.StudentBelowPovertyPct == other.StudentBelowPovertyPct ||
                    this.StudentBelowPovertyPct != null &&
                    this.StudentBelowPovertyPct.Equals(other.StudentBelowPovertyPct)
                ) && 
                (
                    this.AdvancePlacementClasses == other.AdvancePlacementClasses ||
                    this.AdvancePlacementClasses != null &&
                    this.AdvancePlacementClasses.Equals(other.AdvancePlacementClasses)
                ) && 
                (
                    this.FreeOrReducedPriceLunches == other.FreeOrReducedPriceLunches ||
                    this.FreeOrReducedPriceLunches != null &&
                    this.FreeOrReducedPriceLunches.Equals(other.FreeOrReducedPriceLunches)
                ) && 
                (
                    this.StudentEthnicity == other.StudentEthnicity ||
                    this.StudentEthnicity != null &&
                    this.StudentEthnicity.Equals(other.StudentEthnicity)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.BlueRibbon != null)
                    hash = hash * 59 + this.BlueRibbon.GetHashCode();
                if (this.InternationalBaccalaureate != null)
                    hash = hash * 59 + this.InternationalBaccalaureate.GetHashCode();
                if (this.TitleI != null)
                    hash = hash * 59 + this.TitleI.GetHashCode();
                if (this.ExpensePerStudent != null)
                    hash = hash * 59 + this.ExpensePerStudent.GetHashCode();
                if (this.StudentBelowPovertyPct != null)
                    hash = hash * 59 + this.StudentBelowPovertyPct.GetHashCode();
                if (this.AdvancePlacementClasses != null)
                    hash = hash * 59 + this.AdvancePlacementClasses.GetHashCode();
                if (this.FreeOrReducedPriceLunches != null)
                    hash = hash * 59 + this.FreeOrReducedPriceLunches.GetHashCode();
                if (this.StudentEthnicity != null)
                    hash = hash * 59 + this.StudentEthnicity.GetHashCode();
                return hash;
            }
        }
    }

}
